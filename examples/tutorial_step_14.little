
(def redSquare
  (let [x y] [100 70]
  (let w 80
    (rect "salmon" x y w w))))

(def main
  (draw [redSquare]))
; <!-- PROSE --> <p>Next, we will use the <em>Create Function</em> tool to turn this definition into a function so that it can be called to create more red squares easily.</p><p>We can invoke <em>Create Function</em> in two main ways:</p><ul class="_12"><li class="_1"><h3>Text-Select Mode</h3><p>Text-select the entire <code>(def redSquare ...)</code> expression starting from its opening parenthesis until its closing parenthesis. Then, either right-click the editor or click on the Code Tools menu at the top of the screen. From either of these menus, select <em>Create Function</em>.</p></li><li class="_2"><h3>Box-Select Mode</h3><p>Hold down the Shift key, hover over the keyword <code>def</code> in <code>(def redSquare   ...)</code>, then click. Release the Shift key. Select <em>Create Function</em> from the pop-up menu.</p></li></ul><p>No matter how the <em>Create Function</em> tool is invoked, there are two options in the results list that we can select from. Because the point of this function is to draw a <em>red</em> square, we'll pick the option that does not make color one of the resulting function arguments.</p><p>Notice how the reference to this expression in <code>main</code> has now turned into a function call.</p><h3 id="exercises">Exercises</h3><ol style="list-style-type: decimal"><li>Perform the transformation with each of the two interactions. Use Undo after each to reset the program.</li></ol>
