
(def [one two] [1 "two"])

(def main
  (draw [(show [one two one two])]))
; <!-- PROSE --> <p>We use the term &quot;tuple&quot; to describe a list with a fixed number of elements. For example, the list expression <code>[1 &quot;two&quot;]</code> in this code is a 2-tuple, that is, a list with exactly two elements.</p><p>Notice how we access the components of tuple expressions with tuple patterns (instead of just plain variables) on the left-hand side of definitions. The tuple pattern <code>[one two]</code> above matches a list with exactly two elements, binding the name one to the first element and two to the second.</p><p>If the tuple pattern and tuple expression do not have the same number of elements, Sketch-n-Sketch throws a run-time error.</p><h3 id="exercises">Exercises</h3><ol style="list-style-type: decimal"><li><p>Add a third variable to the tuple pattern and a third value to the list expression, and re-run.</p></li><li><p>Remove one of the expressions from the list expression (so that the number of variables and expressions are unequal), and re-run.</p></li></ol>
