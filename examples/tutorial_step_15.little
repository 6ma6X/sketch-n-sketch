
(def redSquare
  (\(w x y)
    (rect "salmon" x y w w)))

(def main
  (draw
    [(redSquare 80 200 250)
     (redSquare 30 200 100)
     (redSquare 150 200 400)]))
; <!-- PROSE --> <p>While refactoring the function in the previous step, we notice something else we'd like to change: every single time our function is called, we always set the x-position to 200, so we decide to just remove the x-position argument.</p><p>To do so, we can use the Remove Argument tool.</p><ul class="_123"><li class="_1">Text-Select Mode (right-click menu): <br><br> Text-select the argument x in the list of arguments after the backslash in the redSquare function definition. Right click the editor and select Remove Argument from the pop-up menu. Click on the single option from the results list.</li><li class="_2">Text-Select Mode (Code Tools menu): <br><br> Text-select the argument x in the list of arguments after the backslash in the redSquare function definition. Select Remove Argument from the Code Tools menu. Click on the single option from the results list.</li><li class="_3">Box-Select Mode: <br><br> Hold down the Shift key and click on the argument x in the list of arguments after the backslash in the redSquare function definition. Release the Shift key. Under the Remove Argument tool in the pop-up menu, select the single result option.</li></ul><p>EXERCISE: Perform the transformation with each of the three interactions. Use Undo after each to reset the program.</p>
