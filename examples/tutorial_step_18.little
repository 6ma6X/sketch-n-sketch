
(def redSquare (\(w x y)
  (rect "salmon" x y w w)))

(def greenSquare (\(w x y)
  (rect "yellowgreen" x y w w)))

(def yellowSquare (\(w x y)
  (rect "gold" x y w w)))

(def main
  (draw
    [(redSquare 50 80 50)
     (yellowSquare 70 70 110)
     (greenSquare 90 60 190)]))
; <!-- PROSE --> <p>Here are some friends for our <code>redSquare</code> function. However, a lot of the code from <code>redSquare</code> has been duplicated in the two new functions; in fact, the only thing that has changed is the color.</p><p>Sketch-n-Sketch provides a <em>Create Function by Merging Definitions</em> code tool that we can use in this situation to abstract much of the repeated code into a helper function.</p><ul class="_12"><li class="_1"><h3>Text-Select Mode</h3><p>Text-select the entire <code>(def redSquare ...)</code> expression starting from its opening parenthesis until its closing parenthesis. Then, either right-click the editor or click on the Code Tools menu at the top of the screen. From either of these menus, select <em>Create Function by Merging Definitions</em>. Hover over the keyword <code>def</code> in <code>(def greenSquare ...)</code>, then click. Hover over the keyword <code>def</code> in <code>(def yellowSquare ...)</code>, then click. Click on the single option from the results list.</p></li><li class="_2"><h3>Box-Select Mode</h3><p>Hold down the Shift key and hover over the keyword <code>def</code> in <code>(def   redSquare ...)</code>, then click. Hover over the keyword <code>def</code> in <code>(def   greenSquare ...)</code>, then click. Hover over the keyword <code>def</code> in <code>(def   yellowSquare ...)</code>, then click. Release the Shift key. Under the <em>Merge Expressions into Function</em> tool in the pop-up menu, select the single option from the results list.</p></li></ul><h3 id="exercises">Exercises</h3><ol style="list-style-type: decimal"><li>Perform the transformation with each of the two interactions. Use Undo after each to reset the program.</li></ol>
