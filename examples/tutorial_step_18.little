; A couple more things before we're done! We'd like to
; reorder the function definitions to match the order
; in which we use them, just for the sake of consistency
; (red, yellow, then green).

(def square (\fill
  (\(w x y)
    (rect fill x y w w))))

(def redSquare
  (square "salmon"))

(def greenSquare
  (square "yellowgreen"))

(def yellowSquare
  (square "gold"))

(def main
  (draw
    [(redSquare 100 80 50)
     (yellowSquare 130 65 160)
     (greenSquare 160 50 300)]))

; To do so, we can use the Move Definition tool.
;
; _begin
; _1 * Text-Select Mode (right-click menu):
; _1   Text-select the entire (def greenSquare ...)
; _1   expression starting from its opening
; _1   parenthesis until its closing parenthesis.
; _1   Right click the editor and select Move
; _1   Definition from the pop-up menu. Click on the
; _1   target position after the yellowSquare
; _1   definition (before the main definition).
; _1   Click on the single result option.
; _1
; _2 * Text-Select Mode (Code Tools menu):
; _2   Text-select the entire (def greenSquare ...)
; _2   expression starting from its opening
; _2   parenthesis until its closing parenthesis.
; _2   Select Move Definition from the Code Tools
; _2   menu. Click on the target position after the
; _2   yellowSquare definition (before the main
; _2   definition). Click on the single result option.
; _2
; _3 * Box-Select Mode:
; _3   Hold down the Shift key and hover over the
; _3   keyword "def" in (def greenSquare ...), then
; _3   click. Next, click on the target position
; _3   after the yellowSquare definition (before the
; _3   main definition). Release the Shift key.
; _3   Under the Move Definition tool in the pop-up
; _3   menu, select the single result option.
; _3
; _end
; EXERCISE: Perform the transformation with each of
; the three interactions. Use Undo after each to
; reset the program.
